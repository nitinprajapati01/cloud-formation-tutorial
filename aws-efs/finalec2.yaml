Parameters:
  LatestAmiId:
    Type:  'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  Owner:
    Type: String
    Default: FirstName LastName
  Project:
    Type: String
    Default: EFS Mount
  DeleteAfter:
    Type: String
    Default: 00/00/201x
  MountPoint:
    Description: The Linux mount point for the EFS volume
    Type: String
    MinLength: '1'
    Default: myEFSvolume
  # Network
  VPC:
    Type: AWS::EC2::VPC::Id
  Subnet1:
    Type: AWS::EC2::Subnet::Id
  PerformanceMode:
    Type: String
    Default: generalPurpose
    AllowedValues:
    - generalPurpose
    - maxIO
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: 'us-east-1c'
      InstanceType: t2.micro
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: 'lb_key'
      ImageId: !Ref 'LatestAmiId'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          sudo yum -y install nfs-utils
          sudo mkdir ~/efs-mount-point 
          sudo sleep 60
          sudo mount -t nfs4 -o nfsvers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ ~/efs-mount-point 
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: '0.0.0.0/0' 
  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy: 
        Status: "ENABLED"
      LifecyclePolicies:
        - LifecyclePolicy:
            TransitionToIA: "AFTER_14_DAYS"
            TransitionToPrimaryStorageClass: "AFTER_1_ACCESS"
      Encrypted: true
      KmsKeyId: 'ea7719d4-fe30-43af-84a5-df9a041cb152'
      FileSystemTags:
      - Key: Name
        Value: !Ref AWS::StackName
      - Key: Owner
        Value: !Ref Owner
      - Key: Project
        Value: !Ref Project
      - Key: DeleteAfter
        Value: !Ref DeleteAfter
      PerformanceMode: !Ref PerformanceMode
  MountTarget1:
    Type: AWS::EFS::MountTarget
    DependsOn:
    - FileSystem
    - EfsSecurityGroup
    Properties:
      FileSystemId: !Ref FileSystem
      SubnetId: !Ref Subnet1
      SecurityGroups:
      - !Ref EfsSecurityGroup
  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Instance to EFS Mount Access
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName
      - Key: Owner
        Value: !Ref Owner
      - Key: Project
        Value: !Ref Project
      - Key: DeleteAfter
        Value: !Ref DeleteAfter
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: EfsSecurityGroup
    Properties:
      CidrIp: '0.0.0.0/0'
      GroupId: !Ref EfsSecurityGroup
      IpProtocol: "-1"
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
  Owner:
    Description: Team or Individual that Owns this Formation.
    Value: !Ref Owner
  Project:
    Description: The project name
    Value: !Ref Project
  VPC:
    Description: Created VPC
    Value: !Ref VPC
  Subnet1:
    Description: Subnet 1
    Value: !Ref Subnet1
  FileSystem:
    Description: FileSystem
    Value: !Ref FileSystem
  PerformanceMode:
    Description: PerformanceMode
    Value: !Ref PerformanceMode
  MountTarget1:
    Description: MountTarget 1
    Value: !Ref MountTarget1